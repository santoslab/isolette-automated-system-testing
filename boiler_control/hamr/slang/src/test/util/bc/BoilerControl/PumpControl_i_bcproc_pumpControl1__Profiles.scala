// #Sireum

package bc.BoilerControl

import org.sireum._
import bc.RandomLib

// Do not edit this file as it will be overwritten if HAMR codegen is rerun

// Profile for initialise entrypoint
@record class PumpControl_i_bcproc_pumpControl1_Profile (
  val name: String,
  val numTests: Z //number of tests to generate
)

// Profile with generators for incoming ports
@record class PumpControl_i_bcproc_pumpControl1_Profile_P(
  val name: String,
  val numTests: Z, // number of tests to generate
  var numTestVectorGenRetries: Z, // number of test vector generation retries
  var api_programReady: RandomLib,
  var api_opMode: RandomLib,
  var api_openPump: RandomLib)

// Profile with generators for state variables and incoming ports
@record class PumpControl_i_bcproc_pumpControl1_Profile_PS(
  val name: String,
  val numTests: Z, // number of tests to generate
  var numTestVectorGenRetries: Z, // number of test vector generation retries
  var In_isPumpFlow: RandomLib,
  var In_isPumpOpen: RandomLib,
  var In_pumpNumber: RandomLib,
  var api_programReady: RandomLib,
  var api_opMode: RandomLib,
  var api_openPump: RandomLib)
